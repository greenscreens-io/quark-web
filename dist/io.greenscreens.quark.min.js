class Buffer{static from(e,t){switch(t){case'base64':return Buffer.fromBase64(e);case'hex':return Buffer.fromHex(e)}return e}static to(e,t){switch(t){case'base64':return Buffer.toBase64(e);case'hex':return Buffer.toHex(e)}return e}static fromHex(e){const t=[];for(let n=0;n<e.length;n+=2)t.push(parseInt('0x'+e.substr(n,2),16));return new Uint8Array(t)}static fromBase64(e){const t=atob(e),n=new ArrayBuffer(t.length),r=new Uint8Array(n);for(let e=0,n=t.length;e<n;e++)r[e]=t.charCodeAt(e);return r}static toHex(e){return Array.prototype.map.call(new Uint8Array(e),(e=>('00'+e.toString(16)).slice(-2))).join('')}static toBase64(e){return btoa(new Uint8Array(e))}}class Event extends EventTarget{#e=new Set;#t(e='',t){const n=Array.from(this.#e);return this.#n(t)?n.filter((n=>n.type===e&&n.listener===t)):n.filter((t=>t.type===e))}#n(e){return'function'==typeof e}addEventListener(e,t,n){return!!this.#n(t)&&(this.#e.add({type:e,listener:t}),super.addEventListener(e,t,n))}removeEventListener(e,t){const n=this,r=n.#t(e,t);r.forEach((e=>super.removeEventListener(e.type,e.listener))),r.forEach((e=>n.#e.delete(e)))}unbind(){Array.from(this.#e).forEach((e=>{super.removeEventListener(e.type,e.listener)})),this.#e.clear()}on(e='',t){return this.addEventListener(e,t)}once(e,t){let wrap=e=>{t(e),wrap=null};return wrap.type=e,wrap.listener=t,this.addEventListener(e,wrap,{once:!0})}off(e='',t){return this.removeEventListener(e,t)}emit(e,t){if(!e)return!1;const n=new CustomEvent(e,{detail:t});return this.dispatchEvent(n)}send(e,t){this.emit(e,t)}listen(e,t){this.on(e,t)}unlisten(e,t){this.off(e,t)}wait(t=''){if(!t)return e('Event undefined!');const n=this;return new Promise(((e,r)=>{n.once(t,(t=>e(t)))}))}static prevent(e){Event.#n(e,'preventDefault')&&e.preventDefault(),Event.#n(e,'stopPropagation')&&e.stopPropagation()}static{Object.freeze(Event)}}class Streams{static get isAvailable(){return'undefined'!=typeof CompressionStream&&'undefined'!=typeof DecompressionStream}static convert(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):'string'==typeof e?(new TextEncoder).encode(e):Array.isArray(e)?new Uint8Array(e):this.convert(JSON.stringify(e))}static#r(e,t,n){const r=this.convert(e);if(n&&!this.isCompressed(r))return e;const s=t.writable.getWriter();return s.write(r),s.close(),new Response(t.readable)}static compress(e,t='gzip'){const n=new CompressionStream(t);return this.#r(e,n,!1)}static decompress(e,t='gzip'){const n=new DecompressionStream(t);return this.#r(e,n,!0)}static isCompressed(e){const t=this;return e=t.convert(e),t.isGzip(e)||t.isZlib(e)}static isGzip(e){return 31===e.at(0)&&139===e.at(1)&&8===e.at(2)}static isZlib(e){return 120===e.at(0)&&[1,94,156,218].indexOf(e.at(1))>-1}static isJson(e){const t=this,n=(e='string'==typeof e?e.trim():t.convert(e)).at(0),r=e.at(e.length-1);return t.#s(n,r)||t.#i(n,r)}static#i(e,t){return!('{'!==e&&123!==e||'}'!==t&&125!==t)}static#s(e,t){return!('['!==e&&91!==e||']'!==t&&93!==t)}}class Security{#a=0;#c=null;#o=null;#l=null;#u=new TextEncoder;#h=new TextDecoder;getChallenge(e){return[e.challenge||'',e.keyEnc||'',e.keyVer||''].join('')}getRandom(e){const t=new Uint8Array(e);return crypto.getRandomValues(t),t}async generateAesKey(){return crypto.subtle.generateKey({name:'AES-CTR',length:128},!0,['encrypt','decrypt'])}async exportAesKey(e){const t=await crypto.subtle.exportKey('raw',e);return new Uint8Array(t)}async importRsaKey(e,t,n){const r=Buffer.from(e,'base64');return crypto.subtle.importKey('spki',r,t,!0,[n])}async verify(e,t,n){const r=Buffer.from(t,'base64'),s=this.#u.encode(n);return crypto.subtle.verify({name:'ECDSA',hash:{name:'SHA-384'}},e,r,s)}async encryptRSA(e){const t=this;let n=e;return'string'==typeof e&&(n=t.#u.encode(e)),crypto.subtle.encrypt('RSA-OAEP',t.#c,n)}async encryptAesMessage(e,t,n){const r=this.#u.encode(n),s={name:'AES-CTR',counter:t,length:128};return crypto.subtle.encrypt(s,e,r)}async decryptAesMessage(e,t,n){const r=Buffer.from(n,'hex'),s={name:'AES-CTR',counter:Buffer.from(t,'hex'),length:128};return crypto.subtle.decrypt(s,e,r)}get isValid(){return null!==this.#c&&null!==this.#o}static get isAvailable(){return null!=crypto.subtle}async init(e){const t=this;if(!Security.isAvailable)return;t.#a++,t.#c=await t.importRsaKey(e.keyEnc,{name:'RSA-OAEP',hash:'SHA-256'},'encrypt'),t.#o=await t.generateAesKey(),t.#l=await t.exportAesKey(t.#o);const n=await t.importRsaKey(e.keyVer,{name:'ECDSA',namedCurve:'P-384'},'verify');if(!await t.verify(n,e.signature,t.getChallenge(e||{})))throw t.#c=null,t.#o=null,t.#l=null,new Error('Signature invalid')}async encrypt(e,t){const n=this,r=n.getRandom(16),s=new Uint8Array(r.length+n.#l.length);s.set(r),s.set(n.#l,r.length);const i='string'==typeof e?e:JSON.stringify(e),a=await n.encryptRSA(s),c=await n.encryptAesMessage(n.#o,r,i);return!0===t?{t:'1',d:c,k:a}:{t:'1',d:Buffer.to(c,'hex'),k:Buffer.to(a,'hex')}}async decrypt(e){const t=this,n=e.iv,r=e.d,s=await t.decryptAesMessage(t.#o,n,r),i=t.#h.decode(s),a=JSON.parse(i);return a&&'ws'==a.type&&'data'===a.cmd?a.data:a}static async init(e){const t=new Security;return await t.init(e),t}}class Queue extends Map{#d=0;#p=0;#y=0;updateRequest(e){const t=this;t.#y++,t.#d++,e.tid=t.#y.toString(),t.set(e.tid,e)}reset(){const e=this;e.#d>50&&e.#p>=e.#d&&(e.#d=0,e.#p=0,e.clear())}process(e){const t=this,n=[];if(Array.isArray(e))e.forEach((e=>{const n=t.execute(e);n&&unkown.push(n)}));else{const r=t.execute(e);r&&n.push(r)}return n}execute(e){const t=this,n=e.tid;let r=null;if(t.#p++,t.has(n)){const r=t.get(n);try{r.finish(e)}catch(e){r.finish(e)}finally{t.delete(n)}}else r=e;return t.reset(),r}}class Request{#f=0;#m=0;#g;constructor(e,t){const n=this;n.#g=t,n.#m=e,n.#w()}get(e,t,n){const r=this;return'timeout'===t?r.timeout:'finish'===t?r.callback.bind(r):e[t]}callback(e){const t=this;if(!t.timeout)return t.#S(),t.#g(e)}get timeout(){return!0===this.#m}#S(){0!==this.#f&&clearTimeout(this.#f)}#w(){const e=this;0!==e.#m&&(e.#f=setTimeout((()=>{e.#m=!0,e.#g(new Error('Call timeouted!'))}),e.#m))}static wrap(e,t,n){return new Proxy(e,new Request(t,n))}}class Generator extends Event{#b={};#f=null;#A=0;#m=0;constructor(e=0,t=0){super(),this.#f=e,this.#m=t}get api(){return this.#b}stop(){const e=this;e.off('call'),e.off('api'),e.off('raw'),e.off('error'),e.#E()}#v(e,t){for(let n in e){let r=e[n];'object'==typeof r?this.#v(r,t)&&(e[n]=null):r._id_===t&&(e[n]=null)}return 0===Object.values(e).filter((e=>null!=e)).length}#E(){const e=this;e.#v(e.#b,e.#f),e.#b={}}build(e){const t=e?e.api||e:null;return t&&this.#C(t),t}#C(e){const t=this;Array.isArray(e)?e.forEach((e=>t.#k(e))):t.#k(e)}#k(e){const t=this;let n=null,r=null;n=t.#x(e.namespace),n[e.action]||(n[e.action]={}),r=n[e.action],t.#R(e.methods)?.forEach((n=>t.#O(e.namespace,e.action,r,n,t.#f)))}#R(e){return e.reduce(((e,t,n,r)=>{if(1==e.filter((e=>e.name==t.name)).length)return e;const s=r.filter((e=>e.name==t.name));if(1===s.length)return e.push(t),e;const i=s.filter((e=>e.name===t.name)).reduce(((e,t)=>(e.len.push(t.len),e.async[t.len]=t.async,e)),{name:t.name,len:[],async:{}});return e.push(i),e}),[])}#x(e){let t=globalThis,n=this.#b;return e.split('.').every((e=>(t[e]||(t[e]={}),t=t[e],n[e]||(n[e]=t),n=t,!0))),t}#O(e,t,n,r,s){const i=!1!==r.encrypt,a={n:e,c:t,m:r.name,l:r.len,a:r.async,e:i,i:s};n[r.name]=this.#B(a),n[r.name]._id_=s}#B(e){const t=this,n=e;return function(){const e=Array.prototype.slice.call(arguments),r=Array.isArray(n.l),s=r?n.l.filter((t=>t===e.length)).pop():n.l;if(e.length!=s)throw new Error(`Invalid arguments length. Required (${n.l})`);const i=r?n.a[e.length]:n.a,a=i?0:t.#m,c={namespace:n.n,action:n.c,method:n.m,id:n.i,enc:n.e,data:e,key:++t.#A,tid:0,ts:Date.now()};return Object.seal(c),new Promise(((e,n)=>{try{const r=Request.wrap(c,a,(r=>{t.#P(r,e,n)}));t.emit('call',r)}catch(e){n(e)}}))}}#P(e,t,n){if(e instanceof Error)return n(e);const r=e.result||e;r.success?t(r):n(r)}static build(e,t,n){const r=new Generator(t,n);return r.build(e),r}}class SocketChannel extends Event{#I=new Queue;#K=null;#U=null;async init(e){const t=this;return t.stop(),t.#U=e,new Promise(((e,n)=>(t.#j(e,n),null)))}get isOpen(){const e=this;return null!=e.#K&&e.#K.readyState===e.#K.OPEN}stop(){const e=this;return null!=e.#K&&(e.#K.close(),e.#K=null,e.#U=null,!0)}#q(e){const t=Array.isArray(e.data)&&e.data.length>0&&!1!==e.enc;return this.#U.Security.isValid&&t}async#W(e){const t=this;let n=null;if((e=e.detail).id!==t.#U.id)return;const r=t.#q(e);if(t.#I.updateRequest(e),r){const n=await t.#U.Security.encrypt(e.data),r=Object.assign({},t.#U.querys||{},n||{});e.data=[r]}const s={cmd:r?'enc':'data',type:'ws',data:[e]};if(n=JSON.stringify(s),!Streams.isAvailable)return t.#K.send(n);n=await Streams.compress(n).arrayBuffer(),t.#K.send(n)}async#j(e,t){const n=this,r=n.#U,s=r.Generator,i=Date.now(),a=new URL(r.serviceURL);Object.assign({},r.headers||{});const c=Object.assign({},r.querys||{});c.q=i,c.c=Streams.isAvailable,Object.entries(c||{}).forEach((e=>{a.searchParams.append(e[0],encodeURIComponent(e[1]))})),n.#K=new WebSocket(a.toString(),['ws4is']),n.#K.binaryType='arraybuffer';const o=n.#W.bind(n);n.#K.onopen=a=>{if(n.emit('online',a),s.on('call',o),!r.isWSAPI)return e(!0);s.once('api',(async n=>{try{n.challenge=i,await r.registerAPI(n),e(!0)}catch(e){t(e)}}))},n.#K.onclose=e=>{s.off('call',o),n.stop(),n.emit('offline',e)},n.#K.onerror=e=>{s.off('call',o),t(e),n.stop(),n.emit('error',e)},n.#K.onmessage=async e=>{try{e.data instanceof ArrayBuffer?await n.#G(e.data):await n.#T(e.data)}catch(e){s.emit('error',e)}}}async#G(e){const t=this;if(Streams.isAvailable&&Streams.isCompressed(e)){const t=Streams.decompress(e);e=await t.arrayBuffer()}if(Streams.isJson(e)){const n=(new TextDecoder).decode(e);t.#T(n)}else generator.emit('raw',e)}async#T(e){const t=this,n=t.#U.Generator;try{if(Streams.isJson(e)){const n=JSON.parse(e);t.#L(n)}else n.emit('raw',e)}catch(e){n.emit('error',e)}}async#L(e){const t=this;let n=null;const r=t.#U,s=r.Generator,i=r.Security;if('api'===e.cmd)return s.emit('api',e.data);if('err'===e.cmd)return s.emit('error',e.result);if('enc'===e.cmd){if(!i.isValid)return s.emit('error',new Error('Security available on https/wss only'));n=await i.decrypt(e)}if('data'===e.cmd&&(n=e.data),n){t.#I.process(n).forEach((e=>t.emit('message',e)))}else t.emit('message',n)}}class WebChannel{#U=null;async init(e){const t=this;t.#U&&t.stop(),t.#U=e;const n=e.Generator,r=await t.#M(e.apiURL);await e.registerAPI(r),e.isSockChannel||n.on('call',t.#J.bind(t))}stop(){const e=this.#U;if(this.#U=null,e.Generator.off('call'),!e.isSockChannel)try{fetch(e.serviceURL,{method:'delete'})}catch(e){}}async#J(e){const t=this;let n=null;if((e=e.detail).id===t.#U.id)try{n=await t.#W(t.#U,e),e.finish(n)}catch(t){e.finish(t)}}async#M(e){const t=e,n=this.#U,r=Date.now(),s=Object.assign({},n.headers||{},{'x-time':r}),i=await fetch(t,{method:'get',headers:s,credentials:'same-origin'}),a=await i.json();return a.challenge=r.toString(),a}async#D(e,t){const n=this.#U,r='application/json',s={Accept:r,'Content-Type':r,'Accept-Encoding':'gzip,deflate,br'},i=new URL(e),a=Object.assign({},n.headers||{},s),c=Object.assign({},n.querys||{}),o=Object.assign({},n.querys||{},t||{}),l={method:'post',headers:a,body:JSON.stringify(o)};Object.entries(c||{}).forEach((e=>{i.searchParams.append(e[0],encodeURIComponent(e[1]))}));const u=await fetch(i.toString(),l);return await u.json()}async#W(e,t){const n=e.Security,r=e.serviceURL,s=Array.isArray(t.data)&&t.data.length>0;let i=t;if(n.isValid&&s&&t.enc&&(i=await n.encrypt(t)),i=await this.#D(r,i),'err'==i.cmd)throw new Error(i.result.msg);if('enc'===i.cmd){if(!n.isValid)throw new Error('Security available on https/wss only');i=await n.decrypt(i)}return i}}class Engine{constructor(e){if(!(e=e||{}).api)throw new Error('API Url not defined!');if(!e.service)throw new Error('Service Url not defined!');const t=this;if(t.cfg=null,t.isWSAPI=!1,t.isWebChannel=!1,t.isSockChannel=!1,t.Security=null,t.Generator=null,t.WebChannel=null,t.SocketChannel=null,t.id=Date.now(),t.cfg=e,t.isWSAPI=e.api===e.service&&0==e.api.indexOf('ws'),t.headers=e.headers||{},t.querys=e.querys||{},t.isWebChannel=0===e.service.indexOf('http'),t.isSockChannel=0===e.service.indexOf('ws'),!1===(t.isWebChannel||t.isSockChannel))throw new Error('Invalid definition for Engine Remote Service')}async init(){const e=this;if(!e.isActive)return e.Security=new Security,e.Generator=new Generator(e.id),(e.isWebChannel||0==e.isWSAPI)&&(e.WebChannel=new WebChannel,await e.WebChannel.init(e)),e.isSockChannel&&(e.SocketChannel=new SocketChannel,await e.SocketChannel.init(e)),e}async registerAPI(e){const t=this;e.signature&&(t.Security?.isActive||await t.Security.init(e)),t.Generator?.build(e.api)}stop(){const e=this;e.WebChannel?.stop(),e.SocketChannel?.stop(),e.Generator?.stop(),e.WebChannel=null,e.SocketChannel=null,e.Generator=null,e.Security=null,e.cfg=null}get api(){return this.Generator?.api||null}get isActive(){const e=this;return!(e.SocketChannel&&!e.SocketChannel.isOpen)&&!(!e.api||!e.Security)}get apiURL(){return this.cfg?.api||null}get serviceURL(){return this.cfg?.service||null}static async init(e){return new Engine(e).init()}}var t=Object.freeze({__proto__:null,Buffer,Event,Streams,Security,Queue,Request,Generator,Socket:SocketChannel,Web:WebChannel,Engine});globalThis.QuarkEngine=t;
//# sourceMappingURL=io.greenscreens.quark.min.js.map
