class Buffer{static#e=new TextEncoder;static#t=new TextDecoder;static validateData(e){let t=null;if(e instanceof Array)t=new Uint8Array(e);else if(e instanceof ArrayBuffer)t=new Uint8Array(e);else if(e instanceof Uint8Array)t=e;else if(e instanceof String||'string'==typeof e)t=Buffer.fromText(e);else{if(!e.toArrayBuffer)throw'Invalid input, must be String or ArrayBuffer or Uint8Array';t=new Uint8Array(e.toArrayBuffer())}return t}static isString(e){return'string'==typeof e}static isHexString(e){return!!Buffer.isString(e)&&/^[0-9A-Fa-f]+$/g.test(e)}static toBuffer(e,t=!1){const n=Buffer;return n.isString(e)&&(e=t?n.fromBase64(e):n.isHexString(e)?n.fromHex(e):n.fromText(e)),n.validateData(e)}static fromText(e){return Buffer.#e.encode(e)}static toText(e){return Buffer.#t.decode(e)}static fromHex(e){const t=[];for(let n=0;n<e.length;n+=2)t.push(parseInt('0x'+e.substr(n,2),16));return new Uint8Array(t)}static toHex(e){return Array.prototype.map.call(new Uint8Array(e),(e=>('00'+e.toString(16)).slice(-2))).join('')}static fromBase64(e){const t=atob(e),n=new ArrayBuffer(t.length),r=new Uint8Array(n);for(let e=0,n=t.length;e<n;e++)r[e]=t.charCodeAt(e);return r}static toBase64(e){return globalThis.btoa(new Uint8Array(e))}}class Event extends EventTarget{#n=new Set;#r(e='',t){const n=Array.from(this.#n);return this.#i(t)?n.filter((n=>n.type===e&&n.listener===t)):n.filter((t=>t.type===e))}#i(e){return'function'==typeof e}addEventListener(e,t,n){return!!this.#i(t)&&(this.#n.add({type:e,listener:t}),super.addEventListener(e,t,n))}removeEventListener(e,t){const n=this,r=n.#r(e,t);r.forEach((e=>super.removeEventListener(e.type,e.listener))),r.forEach((e=>n.#n.delete(e)))}unbind(){Array.from(this.#n).forEach((e=>{super.removeEventListener(e.type,e.listener)})),this.#n.clear()}on(e='',t){return this.addEventListener(e,t)}once(e,t){let wrap=e=>{t(e),wrap=null};return wrap.type=e,wrap.listener=t,this.addEventListener(e,wrap,{once:!0})}off(e='',t){return this.removeEventListener(e,t)}emit(e,t){if(!e)return!1;const n=new CustomEvent(e,{detail:t});return this.dispatchEvent(n)}send(e,t){this.emit(e,t)}listen(e,t){this.on(e,t)}unlisten(e,t){this.off(e,t)}wait(t=''){if(!t)return e('Event undefined!');const n=this;return new Promise(((e,r)=>{n.once(t,(t=>e(t)))}))}static prevent(e){Event.#i(e,'preventDefault')&&e.preventDefault(),Event.#i(e,'stopPropagation')&&e.stopPropagation()}static{Object.freeze(Event)}}class Streams{static get isAvailable(){return'undefined'!=typeof CompressionStream&&'undefined'!=typeof DecompressionStream}static convert(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):'string'==typeof e?(new TextEncoder).encode(e):Array.isArray(e)?new Uint8Array(e):this.convert(JSON.stringify(e))}static#s(e,t,n){const r=this.convert(e);if(n&&!this.isCompressed(r))return e;const i=t.writable.getWriter();return i.write(r),i.close(),new Response(t.readable)}static compress(e,t='gzip'){const n=new CompressionStream(t);return this.#s(e,n,!1)}static decompress(e,t='gzip'){const n=new DecompressionStream(t);return this.#s(e,n,!0)}static isCompressed(e){const t=this;return e=t.convert(e),t.isGzip(e)||t.isZlib(e)}static isGzip(e){return 31===e.at(0)&&139===e.at(1)&&8===e.at(2)}static isZlib(e){return 120===e.at(0)&&[1,94,156,218].indexOf(e.at(1))>-1}static isJson(e){const t=this,n=(e='string'==typeof e?e.trim():t.convert(e)).at(0),r=e.at(e.length-1);return t.#a(n,r)||t.#c(n,r)}static#c(e,t){return!('{'!==e&&123!==e||'}'!==t&&125!==t)}static#a(e,t){return!('['!==e&&91!==e||']'!==t&&93!==t)}}class Security{static#o={name:'ECDH',namedCurve:'P-256'};static#l={name:'AES-CTR',length:128};#u=null;#h=null;get publicKey(){return this.#u}cookie(e='/'){return`gs-public-key=${this.#u||''};path=${e}`}updateCookie(e='/'){document.cookie=this.cookie(e)}#f(e){return[e.challenge||'',e.keyEnc||'',e.keyVer||''].join('')}async importKey(e,t,n){const r=Buffer.fromBase64(e),i=n?n.split(','):[];return crypto.subtle.importKey('spki',r,t,!0,i)}async exportKey(e){const t=await crypto.subtle.exportKey('raw',e);return Buffer.toHex(t)}async verify(e,t,n){t=Buffer.fromBase64(t),n=Buffer.toBuffer(n);return crypto.subtle.verify({name:'ECDSA',hash:{name:'SHA-384'}},e,t,n)}async#y(e){const t=this,n=await t.importKey(e.keyVer,{name:'ECDSA',namedCurve:'P-384'},'verify');if(!await t.verify(n,e.signature,t.#f(e)))throw new Error('Signature invalid')}#d(e){return this.importKey(e.keyEnc,Security.#o,'')}#p(){return crypto.subtle.generateKey(Security.#o,!0,['deriveKey','deriveBits'])}#g(e,t){const n={name:'ECDH',public:t};return crypto.subtle.deriveKey(n,e,{name:'AES-CTR',length:128},!1,['encrypt','decrypt'])}getRandom(e){const t=new Uint8Array(e);return crypto.getRandomValues(t),t}async encryptRaw(e,t,n){const r=Buffer.toBuffer(t),i=Buffer.toBuffer(n),s=Object.assign({counter:r},Security.#l);return crypto.subtle.encrypt(s,e,i)}async decryptRaw(e,t,n){const r=Buffer.toBuffer(t),i=Buffer.toBuffer(n),s=Object.assign({counter:r},Security.#l);return crypto.subtle.decrypt(s,e,i)}async decryptAsString(e,t,n){const r=await this.decryptRaw(e,t,n);return Buffer.toText(r)}async encryptAsHex(e,t,n){const r=await this.encryptRaw(e,t,n);return Buffer.toHex(r)}get isValid(){return null!==this.#u&&null!==this.#h}static get isAvailable(){return!!crypto.subtle}async init(e){if(!Security.isAvailable)return;const t=this;await t.#y(e);const n=await t.#d(e),r=await t.#p();t.#u=await t.exportKey(r.publicKey),t.#h=await t.#g(r.privateKey,n)}async encrypt(e){e='string'==typeof e?e:JSON.stringify(e);const t=this,n=t.getRandom(16);return{d:await t.encryptAsHex(t.#h,n,e),k:Buffer.toHex(n),t:1,b:6}}async decrypt(e){const t=e.iv,n=e.d,r=await this.decryptAsString(this.#h,t,n),i=JSON.parse(r);return i&&'ws'==i.type&&'data'===i.cmd?i.data:i}static async init(e){const t=new Security;return await t.init(e),t}}class Queue extends Map{#m=0;#w=0;#S=0;updateRequest(e){const t=this;t.#S++,t.#m++,e.tid=t.#S.toString(),t.set(e.tid,e)}reset(){const e=this;e.#m>50&&e.#w>=e.#m&&(e.#m=0,e.#w=0,e.clear())}process(e){const t=this,n=[];if(Array.isArray(e))e.forEach((e=>{const n=t.execute(e);n&&unkown.push(n)}));else{const r=t.execute(e);r&&n.push(r)}return n}execute(e){const t=this,n=e.tid;let r=null;if(t.#w++,t.has(n)){const r=t.get(n);try{r.finish(e)}catch(e){r.finish(e)}finally{t.delete(n)}}else r=e;return t.reset(),r}}class Request{#b=0;#A=0;#v;constructor(e,t){const n=this;n.#v=t,n.#A=e,n.#C()}get(e,t){const n=this;return'timeout'===t?n.timeout:'finish'===t?n.callback.bind(n):e[t]}callback(e){const t=this;if(!t.timeout)return t.#E(),t.#v(e)}get timeout(){return!0===this.#A}#E(){0!==this.#b&&clearTimeout(this.#b)}#C(){const e=this;0!==e.#A&&(e.#b=setTimeout((()=>{e.#A=!0,e.#v(new Error('Call timeouted!'))}),e.#A))}static wrap(e,t,n){return new Proxy(e,new Request(t,n))}}class Generator extends Event{#k={};#b=null;#B=0;#A=0;constructor(e=0,t=0){super(),this.#b=e,this.#A=t}get api(){return this.#k}stop(){const e=this;e.off('call'),e.off('api'),e.off('raw'),e.off('error'),e.#x()}#P(e,t){for(let n in e){let r=e[n];'object'==typeof r?this.#P(r,t)&&(e[n]=null):r._id_===t&&(e[n]=null)}return 0===Object.values(e).filter((e=>null!=e)).length}#x(){const e=this;e.#P(e.#k,e.#b),e.#k={}}build(e){const t=e?e.api||e:null;return t&&this.#R(t),t}#R(e){const t=this;Array.isArray(e)?e.forEach((e=>t.#O(e))):t.#O(e)}#O(e){const t=this;let n=null,r=null;n=t.#T(e.namespace),n[e.action]||(n[e.action]={}),r=n[e.action],t.#W(e.methods)?.forEach((n=>t.#K(e.namespace,e.action,r,n,t.#b)))}#W(e){return e.reduce(((e,t,n,r)=>{if(1==e.filter((e=>e.name==t.name)).length)return e;const i=r.filter((e=>e.name==t.name));if(1===i.length)return e.push(t),e;const s=i.filter((e=>e.name===t.name)).reduce(((e,t)=>(e.len.push(t.len),e.async[t.len]=t.async,e)),{name:t.name,len:[],async:{}});return e.push(s),e}),[])}#T(e){let t=globalThis,n=this.#k;return e.split('.').every((e=>(t[e]||(t[e]={}),t=t[e],n[e]||(n[e]=t),n=t,!0))),t}#K(e,t,n,r,i){const s=!1!==r.encrypt,a={n:e,c:t,m:r.name,l:r.len,a:r.async,e:s,i};n[r.name]=this.#U(a),n[r.name]._id_=i}#U(e){const t=this,n=e;return function(){const e=Array.prototype.slice.call(arguments),r=Array.isArray(n.l),i=r?n.l.filter((t=>t===e.length)).pop():n.l;if(e.length!=i)throw new Error(`Invalid arguments length. Required (${n.l})`);const s=r?n.a[e.length]:n.a,a=s?0:t.#A,c={namespace:n.n,action:n.c,method:n.m,id:n.i,enc:n.e,data:e,key:++t.#B,tid:0,ts:Date.now()};return Object.seal(c),new Promise(((e,n)=>{try{const r=Request.wrap(c,a,(r=>{t.#I(r,e,n)}));t.emit('call',r)}catch(e){n(e)}}))}}#I(e,t,n){if(e instanceof Error)return n(e);const r=e.result||e;r.success?t(r):n(r)}static build(e,t,n){const r=new Generator(t,n);return r.build(e),r}}class SocketChannel extends Event{#q=new Queue;#j=null;#G=null;async init(e){const t=this;return t.stop(),t.#G=e,new Promise(((e,n)=>(t.#D(e,n),null)))}get isOpen(){const e=this;return null!=e.#j&&e.#j.readyState===e.#j.OPEN}stop(){const e=this;return null!=e.#j&&(e.#j.close(),e.#j=null,e.#G=null,!0)}#H(e){const t=Array.isArray(e.data)&&e.data.length>0&&e.enc;return this.#G.Security.isValid&&t}async#L(e){const t=this;let n=null;if((e=e.detail).id!==t.#G.id)return;const r=t.#H(e);if(t.#q.updateRequest(e),r){const n=await t.#G.Security.encrypt(e.data),r=Object.assign({},t.#G.querys||{},n||{});e.data=[r]}const i={cmd:r?'enc':'data',type:'ws',data:[e]};if(n=JSON.stringify(i),!Streams.isAvailable)return t.#j.send(n);n=await Streams.compress(n).arrayBuffer(),t.#j.send(n)}async#D(e,t){const n=this,r=n.#G,i=r.Generator,s=r.Security,a=Date.now(),c=new URL(r.serviceURL),o=Object.assign({},r.querys||{});o.q=a,o.c=Streams.isAvailable,Object.entries(o||{}).forEach((e=>{e[1]&&c.searchParams.append(e[0],encodeURIComponent(e[1]))})),s.updateCookie(),n.#j=new WebSocket(c.toString(),['ws4is']),n.#j.binaryType='arraybuffer';const l=n.#L.bind(n);n.#j.onopen=s=>{if(n.emit('online',s),i.on('call',l),!r.isWSAPI)return e(!0);i.once('api',(async n=>{try{n.challenge=a,await r.registerAPI(n),e(!0)}catch(e){t(e)}}))},n.#j.onclose=e=>{i.off('call',l),n.stop(),n.emit('offline',e)},n.#j.onerror=e=>{i.off('call',l),t(e),n.stop(),n.emit('error',e)},n.#j.onmessage=async e=>{try{e.data instanceof ArrayBuffer?await n.#_(e.data):await n.#J(e.data)}catch(e){i.emit('error',e)}}}async#_(e){const t=this;if(Streams.isAvailable&&Streams.isCompressed(e)){const t=Streams.decompress(e);e=await t.arrayBuffer()}if(Streams.isJson(e)){const n=(new TextDecoder).decode(e);t.#J(n)}else generator.emit('raw',e)}async#J(e){const t=this,n=t.#G.Generator;try{if(Streams.isJson(e)){const n=JSON.parse(e);t.#M(n)}else n.emit('raw',e)}catch(e){n.emit('error',e)}}async#M(e){const t=this;let n=null;const r=t.#G,i=r.Generator,s=r.Security;if('api'===e.cmd)return i.emit('api',e.data);if('err'===e.cmd)return i.emit('error',e.result);if('enc'===e.cmd){if(!s.isValid)return i.emit('error',new Error('Security available on https/wss only'));n=await s.decrypt(e)}if('data'===e.cmd&&(n=e.data),n){t.#q.process(n).forEach((e=>t.emit('message',e)))}else t.emit('message',n)}}class WebChannel{#G=null;async init(e){const t=this;t.#G&&t.stop(),t.#G=e;const n=e.Generator,r=await t.#V(e.apiURL);await e.registerAPI(r),e.isSockChannel||n.on('call',t.#N.bind(t))}stop(){const e=this.#G;if(this.#G=null,e.Generator.off('call'),!e.isSockChannel)try{fetch(e.serviceURL,{method:'delete'})}catch(e){}}async#N(e){const t=this;let n=null;if((e=e.detail).id===t.#G.id)try{n=await t.#L(t.#G,e),e.finish(n)}catch(t){e.finish(t)}}async#V(e){const t=e,n=this.#G,r=Date.now(),i=Object.assign({},n.headers||{},{'x-time':r}),s=await fetch(t,{method:'get',headers:i,credentials:'same-origin'}),a=await s.json();return a.challenge=r.toString(),a}async#F(e,t,n){const r=this.#G,i='application/json',s={Accept:i,'Content-Type':i,'Accept-Encoding':'gzip,deflate,br'},a=new URL(e),c=Object.assign({},r.headers||{},s,n||{}),o=Object.assign({},r.querys||{}),l=Object.assign({},r.querys||{},t||{}),u={method:'post',headers:c,body:JSON.stringify(l)};Object.entries(o||{}).forEach((e=>{a.searchParams.append(e[0],encodeURIComponent(e[1]))}));const h=await fetch(a.toString(),u);return await h.json()}async#L(e,t){const n=e.Security,r=e.serviceURL,i=Array.isArray(t.data)&&t.data.length>0;let s=t,a={};if(n.isValid&&i&&t.enc&&(s=await n.encrypt(t),a['gs-public-key']=n.publicKey),s=await this.#F(r,s,a),'err'==s.cmd)throw new Error(s.result.msg);if('enc'===s.cmd){if(!n.isValid)throw new Error('Security available on https/wss only');s=await n.decrypt(s)}return s}}var t=Object.freeze({__proto__:null,Buffer,Event,Generator,QuarkEngine:class QuarkEngine{#Q=null;#z=!1;#Y=!1;#$=!1;#Z=null;#X=null;#ee=null;#te=null;#ne=null;#re=null;#b=null;constructor(e){if(!(e=e||{}).api)throw new Error('API Url not defined!');if(!e.service)throw new Error('Service Url not defined!');const t=this;if(t.#Q=null,t.#z=!1,t.#Y=!1,t.#$=!1,t.#Z=null,t.#X=null,t.#ee=null,t.#te=null,t.#b=Date.now(),t.#Q=e,t.#z=e.api===e.service&&0==e.api.indexOf('ws'),t.#ne=e.headers||{},t.#re=e.querys||{},t.#Y=0===e.service.indexOf('http'),t.#$=0===e.service.indexOf('ws'),!1===(t.isWebChannel||t.isSocketChannel))throw new Error('Invalid definition for Engine Remote Service')}async init(){const e=this;if(!e.isActive)return e.#Z=new Security,e.#X=new Generator(e.id),(e.isWebChannel||0==e.isWSAPI)&&(e.#ee=new WebChannel,await e.WebChannel.init(e)),e.isSocketChannel&&(e.#te=new SocketChannel,await e.SocketChannel.init(e)),e}async registerAPI(e){const t=this;e.signature&&await(t.Security?.init(e)),t.Generator?.build(e.api)}stop(){const e=this;e.WebChannel?.stop(),e.SocketChannel?.stop(),e.Generator?.stop(),e.#ee=null,e.#te=null,e.#X=null,e.#Z=null,e.#Q=null}get api(){return this.Generator?.api||null}get isActive(){const e=this;return!(e.SocketChannel&&!e.SocketChannel.isOpen)&&!(!e.api||!e.Security)}get apiURL(){return this.cfg?.api||null}get serviceURL(){return this.cfg?.service||null}get cfg(){return this.#Q}get isWSAPI(){return this.#z}get isWebChannel(){return this.#Y}get isSocketChannel(){return this.#$}get Security(){return this.#Z}get Generator(){return this.#X}get WebChannel(){return this.#ee}get SocketChannel(){return this.#te}get headers(){return this.#ne}get querys(){return this.#re}get id(){return this.#b}static async init(e){return new QuarkEngine(e).init()}},Queue,Request,Security,SocketChannel,Streams,WebChannel});globalThis.QuarkEngine=t;
//# sourceMappingURL=io.greenscreens.quark.min.js.map
